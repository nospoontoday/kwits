name: HostingerDeploy

on:
    release:
        types: [created]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.3'

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 20

            - name: Created .env
              run: cp .env.example .env

            - name: Install composer dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Set application encryption key
              run: php artisan key:generate --ansi

            - name: Create storage link
              run: php artisan storage:link

            - name: Run migrations
              run: php artisan migrate --force

            - name: Install node dependencies
              run: npm ci

            - name: Build assets
              run: npm run build

            - name: Run tests
              run: php artisan test

            - name: Deploy to server
              if: ${{ success() }}
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USERNAME }}
                port: ${{ secrets.SSH_PORT }}
                key: ${{ secrets.SSH_KEY }}
                script_stop: true
                script: |
                  cd htdocs/srv593795.hstgr.cloud
                  
                  # Ensure proper permissions
                  sudo chown -R $USER:$USER public/build
                  sudo chmod -R u+rwx public/build

                  # Check if already on master, if not, switch to master
                  CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
                  if [ "$CURRENT_BRANCH" != "master" ]; then
                    git checkout master
                  fi

                  # Discard uncommitted changes or stash them
                  git reset --hard HEAD
                  git clean -fd

                  # Handle the tag
                  if git rev-parse -q --verify "refs/tags/${{ github.event.release.tag_name }}"; then
                    git tag -d ${{ github.event.release.tag_name }}
                  fi
                  
                  git fetch --all
                  git checkout ${{ github.event.release.tag_name }}
                  
                  composer install
                  npm ci
                  npm run build
                  php artisan migrate --force
                  php artisan config:cache
                  php artisan route:cache
                  php artisan view:cache
                  php artisan queue:restart
                  php artisan reverb:restart
